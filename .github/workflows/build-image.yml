name: Build and push Docker image

on:
  workflow_call:
    secrets:
      GCP_SA_JSON:
        required: true
    inputs:
      BRANCH:
        description: 'The branch to build for staging deployments'
        default: main
        type: string
      ENABLE_PRODUCTION:
        description: 'Build production images based on tags'
        default: true
        type: boolean

env:
  STG_PROJECT_ID: stg-pro-397609
  # TODO: Replace with the prodcution project ID when that is available
  PRD_PROJECT_ID: stg-pro-397609
  ARTIFACT_REGISTRY_LOCATION: europe-west4-docker.pkg.dev
  ARTIFACT_REGISTRY_NAME: pro-containers

jobs:
  docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/${{ github.event.inputs.BRANCH }}' || (${{ github.event.inputs.ENABLE_PRODUCTION }} && startsWith(github.ref, 'refs/tags/')))

    steps:
    - name: Set environment (Staging)
      if: github.ref == 'refs/heads/${{ github.event.inputs.BRANCH }}'
      run: |
        echo "ENVIRONMENT=staging" >> $GITHUB_ENV

    - name: Set environment (Production)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "ENVIRONMENT=production" >> $GITHUB_ENV
    
    - name: Set project id
      run: |
        if [[ "${{ env.ENVIRONMENT }}" == "production" ]]; then
          echo "PROJECT_ID=${{ env.PRD_PROJECT_ID }}" >> $GITHUB_ENV
        elif [[ "${{ env.ENVIRONMENT }}" == "staging" ]]; then
          echo "PROJECT_ID=${{ env.STG_PROJECT_ID }}" >> $GITHUB_ENV
        fi

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.10.0

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_SA_JSON }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.1
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      run: gcloud --quiet auth configure-docker ${{ env.ARTIFACT_REGISTRY_LOCATION }}

    - name: Extract repository name as safe container image name
      run: |
        raw_name=$(echo "${{ github.repository }}" | awk -F / '{print $2}')
        clean_name=$(echo "$raw_name" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_.-]//g')
        echo "REPO_NAME=$clean_name" >> $GITHUB_ENV

    - name: Build and push image (Staging)
      if: env.ENVIRONMENT == 'staging'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ env.ARTIFACT_REGISTRY_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.REPO_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push image (Production)
      if: env.ENVIRONMENT == 'production'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ env.ARTIFACT_REGISTRY_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.REPO_NAME }}:${{ github.ref_name }}
          ${{ env.ARTIFACT_REGISTRY_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.REPO_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
  