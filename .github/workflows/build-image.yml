name: Build and push Docker image

on:
  workflow_call:
    secrets:
      GCP_SA_JSON:
        required: true

env:
  PROJECT_ID: stg-pro-397609
  ARTIFACT_REGISTRY_LOCATION: europe-west4-docker.pkg.dev
  ARTIFACT_REGISTRY_NAME: pro-containers

jobs:
  docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    continue-on-error: true # Prevent build from failing when we cannot build / push container image

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.10.0

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_SA_JSON }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.1
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      run: gcloud --quiet auth configure-docker ${{ env.ARTIFACT_REGISTRY_LOCATION }}

    - name: Extract repository name as safe container image name
      run: |
        raw_name=$(echo "${{ github.repository }}" | awk -F / '{print $2}')
        clean_name=$(echo "$raw_name" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_.-]//g')
        echo "REPO_NAME=$clean_name" >> $GITHUB_ENV

    - name: Build and push staging Docker image on regular push
      if: startsWith(github.ref, 'refs/heads/')
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: |
          ${{ env.ARTIFACT_REGISTRY_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.REPO_NAME }}:staging
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push production Docker image on new tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: |
          ${{ env.ARTIFACT_REGISTRY_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.REPO_NAME }}:${{ github.ref_name }}
          ${{ env.ARTIFACT_REGISTRY_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.REPO_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
  